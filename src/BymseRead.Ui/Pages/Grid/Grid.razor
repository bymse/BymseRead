@page "/"
@page "/Grid"
@using BymseRead.Core.Models
@using BymseRead.DataLayer.Entity
@using BymseRead.Core
@inject BooksService BooksService
@inject IJSRuntime JsRuntime

<section class="books-grid__container" id="books-grid">
    <div class="books-grid">
        @foreach (var book in Books)
        {
            <BookCard Book="book"/>
        }
    </div>
    @if (Books.Count > 0)
    {
        <div class="load-more">
            @if (ShowLoadMore)
            {
                <button type="button" title="Load more" class="button-icon button-icon_down" @onclick="LoadBooks"></button>
            }
            else
            {
                <span class="load-more__text">All books are here</span>
                <button type="button" class="button-icon button-icon_up" @onclick="ScrollUp"></button>
            }
        </div>
    }
    else
    {
        <span class="no-books">There are no books here. Use top left button to add some.</span>
    }
</section>


@code {

    private BookState? nextState = BookState.Active;

    private bool ShowLoadMore => nextState != null;

    private List<BookModel> Books { get; } = new();

    protected async override Task OnInitializedAsync()
    {
        LoadBooks();
    }

    private void LoadBooks()
    {
        if (!ShowLoadMore)
        {
            return;
        }

        var books = BooksService.GetBooks(nextState!.Value);
        nextState = GetNextState(nextState.Value);

        if (books.Length == 0)
        {
            LoadBooks();
            return;
        }

        Books.AddRange(books);
    }

    private async Task ScrollUp() => await JsRuntime.InvokeAsync<object>("scrollGridTop");

    private static BookState? GetNextState(BookState current)
    {
        return current switch 
        {
            
            BookState.Active => BookState.Paused,
            BookState.Paused => BookState.New,
            BookState.New => BookState.Finished,
            BookState.Finished => null,
            _ => null
            };
    }

}