@using BymseRead.Ui.Abstractions
@inject IJSRuntime JsRuntime

<InputNumber
    class="@Class"
    id="@InputId"
    @bind-Value="@Page"/>
<span>/</span>
<span>@TotalPages</span>
<div id="@MeasurerId"></div>

@code {

    [Parameter]
    public int Page { get; set; }

    [Parameter]
    public EventCallback<int> PageChanged { get; set; }

    [Parameter]
    public int TotalPages { get; set; }
    
    [Parameter]
    public string Class { get; set; }

    private string uniqueID = Guid.NewGuid().ToString();
    private string MeasurerId => "measurer-" + uniqueID;
    private string InputId => "input-" + uniqueID;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync(
                "initializeInputsAutoWidth",
                $"#{MeasurerId}", $"#{InputId}"
                );
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        await Task.Delay(1);
        await JsRuntime.InvokeVoidAsync(
            "fixElementWidth",
            $"#{MeasurerId}", $"#{InputId}"
            );
    }

}