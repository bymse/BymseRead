@using BymseRead.Core.Models
@using BymseRead.DataLayer.Entity
@using BymseRead.DataLayer.Helpers
@{
    var isAdd = Bookmark.Id == 0;
    var title = isAdd ? "Add bookmark" : "Edit bookmark";
}
<Modal Show="Show" ShowChanged="ShowChanged" ModalTitle="@title">
    <EditForm class="form bookmark-form" Model="@this" OnSubmit="OnSave">
        <div class="form__line">
            <InputText @bind-Value="@Title" placeholder="Title..." type="text" class="form__text-input bookmark-form__title-input" required="true"/>
            <BookmarkPagesInput @bind-Page="@Page" TotalPages="@TotalPages"/>
        </div>
        <div class="form__line">
            Color: <ColorRadioButtons @bind-ColorCode="ColorCode"></ColorRadioButtons>
        </div>
        <ModalButtons>
            @if(isAdd)
            {
                <button type="submit" class="button">Create</button>
            }
            else
            {
                <button type="submit" class="button">Save changes</button>
                <button type="button" class="button button_red" @onclick="OnDeleteClick">Delete bookmark</button>
            }
        </ModalButtons>
    </EditForm>
</Modal>

@code {
    [Parameter]
    public bool Show { get; set; }
    
    [Parameter]
    public EventCallback<bool> ShowChanged { get; set; }
    
    [Parameter]
    public Func<BookmarkModel, Task> OnSubmit { get; set; }
    
    [Parameter]
    public Func<BookmarkModel, Task> OnDelete { get; set; }

    [Parameter]
    public BookmarkModel Bookmark { get; set; }

    [Parameter]
    public int? TotalPages { get; set; }

    private string? Title { get; set; }
    private int Page { get; set; }
    private ColorCode ColorCode { get; set; }

    protected override void OnInitialized()
    {
        if (!Show)
        {
            return;
        }
        
        Title = Bookmark.Title;
        Page = Bookmark.Page;
        ColorCode = Bookmark.ColorCode;
    }

    private Task OnSave() => OnSubmit(GetModel());

    private Task OnDeleteClick() => OnDelete(GetModel());

    private BookmarkModel GetModel() => new()
    {
        Id = Bookmark.Id,
        Title = Title,
        Page = Page,
        ColorCode = ColorCode,
        Date = DateTime.UtcNow,
        Type = BookmarkType.Custom
    };
}