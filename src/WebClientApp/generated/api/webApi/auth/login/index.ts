/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createProblemDetailsFromDiscriminatorValue, createRedirectProblemDetailsFromDiscriminatorValue, type ProblemDetails, type RedirectProblemDetails } from '../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /web-api/auth/login
 */
export interface LoginRequestBuilder extends BaseRequestBuilder<LoginRequestBuilder> {
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     * @throws {ProblemDetails} error when the service returns a 400 status code
     * @throws {RedirectProblemDetails} error when the service returns a 401 status code
     */
     get(requestConfiguration?: RequestConfiguration<LoginRequestBuilderGetQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<LoginRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
export interface LoginRequestBuilderGetQueryParameters {
    returnUrl?: string;
}
/**
 * Uri template for the request builder.
 */
export const LoginRequestBuilderUriTemplate = "{+baseurl}/web-api/auth/login{?returnUrl*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const LoginRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: LoginRequestBuilderUriTemplate,
        responseBodyContentType: "application/problem+json",
        errorMappings: {
            400: createProblemDetailsFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createRedirectProblemDetailsFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
};
/* tslint:enable */
/* eslint-enable */
