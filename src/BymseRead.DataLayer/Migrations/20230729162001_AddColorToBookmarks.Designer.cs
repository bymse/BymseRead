// <auto-generated />
using System;
using BymseRead.DataLayer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BymseRead.DataLayer.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20230729162001_AddColorToBookmarks")]
    partial class AddColorToBookmarks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("BymseRead.DataLayer.Entity.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalPages")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("Title", "AuthorName")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BymseRead.DataLayer.Entity.BookTagLink", b =>
                {
                    b.Property<int>("BookTagLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookTagLinkId");

                    b.HasIndex("BookId");

                    b.HasIndex("TagId");

                    b.ToTable("BookTagLinks");
                });

            modelBuilder.Entity("BymseRead.DataLayer.Entity.Bookmark", b =>
                {
                    b.Property<int>("BookmarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookmarkType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(7);

                    b.Property<long>("CreatedDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("BookmarkId");

                    b.HasIndex("BookId");

                    b.ToTable("Bookmarks");
                });

            modelBuilder.Entity("BymseRead.DataLayer.Entity.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BymseRead.DataLayer.Entity.BookTagLink", b =>
                {
                    b.HasOne("BymseRead.DataLayer.Entity.Book", "Book")
                        .WithMany("BookTags")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BymseRead.DataLayer.Entity.Tag", "Tag")
                        .WithMany("BookTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("BymseRead.DataLayer.Entity.Bookmark", b =>
                {
                    b.HasOne("BymseRead.DataLayer.Entity.Book", "Book")
                        .WithMany("Bookmarks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BymseRead.DataLayer.Entity.Book", b =>
                {
                    b.Navigation("BookTags");

                    b.Navigation("Bookmarks");
                });

            modelBuilder.Entity("BymseRead.DataLayer.Entity.Tag", b =>
                {
                    b.Navigation("BookTags");
                });
#pragma warning restore 612, 618
        }
    }
}
